/**
 * Transform API
 * TODO
 *
 * The version of the OpenAPI document: 1.0
 * Contact: someone@maxar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { EvalScriptResponse, FunctionDescriptor, StoreScriptResponse, UnifiedMetadata } from '../models/index';
export interface EvalScriptRequest {
    id: string;
    _function: string;
    p?: Array<string> | null;
}
export interface GetScriptRequest {
    id: string;
}
export interface GetScriptGeotiffRequest {
    range: string;
    id: string;
    _function: string;
    prefetch?: boolean;
    p?: Array<string> | null;
}
export interface GetScriptMetadataRequest {
    id: string;
    _function: string;
    p?: Array<string> | null;
    key?: string | null;
}
export interface StoreScriptRequest {
    body: string;
}
/**
 * DefaultApi - interface
 *
 * @export
 * @interface DefaultApiInterface
 */
export interface DefaultApiInterface {
    /**
     * Get the results from executing and evaluating a script via a script id, parameters, and an function name.
     * @summary Execute and evaluate a script
     * @param {string} id Script ID
     * @param {string} _function The function to process
     * @param {Array<string>} [p] The function parameters if required
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    evalScriptRaw(requestParameters: EvalScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EvalScriptResponse>>;
    /**
     * Get the results from executing and evaluating a script via a script id, parameters, and an function name.
     * Execute and evaluate a script
     */
    evalScript(requestParameters: EvalScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EvalScriptResponse>;
    /**
     * Get a list of all domain functions available to IPEScript.
     * @summary Get a list of all domain function.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    getFunctionListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FunctionDescriptor>>>;
    /**
     * Get a list of all domain functions available to IPEScript.
     * Get a list of all domain function.
     */
    getFunctionList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FunctionDescriptor>>;
    /**
     *
     * @summary Get a script given a script id.
     * @param {string} id Graph ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    getScriptRaw(requestParameters: GetScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Get a script given a script id.
     */
    getScript(requestParameters: GetScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Support virtual image as GeoTIFF given a script id, function name, script parameters (provided as url query parameters), and a valid byte range. The entire dataset represented by the script, function and parameters is presented as a geotiff and this method allows a user to read a portion of the virtual GeoTIFF. See [Byte Serving](https://en.wikipedia.org/wiki/Byte_serving).
     * @summary Get a byte range from a virtual GeoTIFF from a script function
     * @param {string} range Range request in bytes
     * @param {string} id Script ID
     * @param {string} _function The function to process
     * @param {boolean} [prefetch] prefetching true or false.  default is true
     * @param {Array<string>} [p] The function parameters if required
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    getScriptGeotiffRaw(requestParameters: GetScriptGeotiffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Blob>>;
    /**
     * Support virtual image as GeoTIFF given a script id, function name, script parameters (provided as url query parameters), and a valid byte range. The entire dataset represented by the script, function and parameters is presented as a geotiff and this method allows a user to read a portion of the virtual GeoTIFF. See [Byte Serving](https://en.wikipedia.org/wiki/Byte_serving).
     * Get a byte range from a virtual GeoTIFF from a script function
     */
    getScriptGeotiff(requestParameters: GetScriptGeotiffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Blob>;
    /**
     * Get metadata about an image given a script id, parameters, and an function name.
     * @summary Get image metadata
     * @param {string} id Script ID
     * @param {string} _function The function to process
     * @param {Array<string>} [p] The function parameters if required
     * @param {string} [key] Metadata attribute key to return
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    getScriptMetadataRaw(requestParameters: GetScriptMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnifiedMetadata>>;
    /**
     * Get metadata about an image given a script id, parameters, and an function name.
     * Get image metadata
     */
    getScriptMetadata(requestParameters: GetScriptMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnifiedMetadata>;
    /**
     * Store the script. The generated unique \"id\" is returned. Make sure to save the \"id\" returned for the resulting script to use when referencing this script. Scripts are NOT editable and any changes, when posted, will cause a new script \"id\" to be generated.
     * @summary Store script
     * @param {string} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    storeScriptRaw(requestParameters: StoreScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StoreScriptResponse>>;
    /**
     * Store the script. The generated unique \"id\" is returned. Make sure to save the \"id\" returned for the resulting script to use when referencing this script. Scripts are NOT editable and any changes, when posted, will cause a new script \"id\" to be generated.
     * Store script
     */
    storeScript(requestParameters: StoreScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StoreScriptResponse>;
}
/**
 *
 */
export declare class DefaultApi extends runtime.BaseAPI implements DefaultApiInterface {
    /**
     * Get the results from executing and evaluating a script via a script id, parameters, and an function name.
     * Execute and evaluate a script
     */
    evalScriptRaw(requestParameters: EvalScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EvalScriptResponse>>;
    /**
     * Get the results from executing and evaluating a script via a script id, parameters, and an function name.
     * Execute and evaluate a script
     */
    evalScript(requestParameters: EvalScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EvalScriptResponse>;
    /**
     * Get a list of all domain functions available to IPEScript.
     * Get a list of all domain function.
     */
    getFunctionListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FunctionDescriptor>>>;
    /**
     * Get a list of all domain functions available to IPEScript.
     * Get a list of all domain function.
     */
    getFunctionList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FunctionDescriptor>>;
    /**
     * Get a script given a script id.
     */
    getScriptRaw(requestParameters: GetScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Get a script given a script id.
     */
    getScript(requestParameters: GetScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Support virtual image as GeoTIFF given a script id, function name, script parameters (provided as url query parameters), and a valid byte range. The entire dataset represented by the script, function and parameters is presented as a geotiff and this method allows a user to read a portion of the virtual GeoTIFF. See [Byte Serving](https://en.wikipedia.org/wiki/Byte_serving).
     * Get a byte range from a virtual GeoTIFF from a script function
     */
    getScriptGeotiffRaw(requestParameters: GetScriptGeotiffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Blob>>;
    /**
     * Support virtual image as GeoTIFF given a script id, function name, script parameters (provided as url query parameters), and a valid byte range. The entire dataset represented by the script, function and parameters is presented as a geotiff and this method allows a user to read a portion of the virtual GeoTIFF. See [Byte Serving](https://en.wikipedia.org/wiki/Byte_serving).
     * Get a byte range from a virtual GeoTIFF from a script function
     */
    getScriptGeotiff(requestParameters: GetScriptGeotiffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Blob>;
    /**
     * Get metadata about an image given a script id, parameters, and an function name.
     * Get image metadata
     */
    getScriptMetadataRaw(requestParameters: GetScriptMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnifiedMetadata>>;
    /**
     * Get metadata about an image given a script id, parameters, and an function name.
     * Get image metadata
     */
    getScriptMetadata(requestParameters: GetScriptMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnifiedMetadata>;
    /**
     * Store the script. The generated unique \"id\" is returned. Make sure to save the \"id\" returned for the resulting script to use when referencing this script. Scripts are NOT editable and any changes, when posted, will cause a new script \"id\" to be generated.
     * Store script
     */
    storeScriptRaw(requestParameters: StoreScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StoreScriptResponse>>;
    /**
     * Store the script. The generated unique \"id\" is returned. Make sure to save the \"id\" returned for the resulting script to use when referencing this script. Scripts are NOT editable and any changes, when posted, will cause a new script \"id\" to be generated.
     * Store script
     */
    storeScript(requestParameters: StoreScriptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StoreScriptResponse>;
}
