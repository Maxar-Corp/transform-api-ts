"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Transform API
 * TODO
 *
 * The version of the OpenAPI document: 1.0
 * Contact: someone@maxar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CollectBandsetMetadataToJSON = exports.CollectBandsetMetadataFromJSONTyped = exports.CollectBandsetMetadataFromJSON = exports.instanceOfCollectBandsetMetadata = void 0;
const runtime_1 = require("../runtime");
const BandColorInterpretation_1 = require("./BandColorInterpretation");
const ImageBand_1 = require("./ImageBand");
/**
 * Check if a given object implements the CollectBandsetMetadata interface.
 */
function instanceOfCollectBandsetMetadata(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCollectBandsetMetadata = instanceOfCollectBandsetMetadata;
function CollectBandsetMetadataFromJSON(json) {
    return CollectBandsetMetadataFromJSONTyped(json, false);
}
exports.CollectBandsetMetadataFromJSON = CollectBandsetMetadataFromJSON;
function CollectBandsetMetadataFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bandsetName': !(0, runtime_1.exists)(json, 'bandsetName') ? undefined : json['bandsetName'],
        'numLinesInDsa': !(0, runtime_1.exists)(json, 'numLinesInDsa') ? undefined : json['numLinesInDsa'],
        'firstUsableLine': !(0, runtime_1.exists)(json, 'firstUsableLine') ? undefined : json['firstUsableLine'],
        'numUsableLines': !(0, runtime_1.exists)(json, 'numUsableLines') ? undefined : json['numUsableLines'],
        'colorInterpretation': !(0, runtime_1.exists)(json, 'colorInterpretation') ? undefined : (0, BandColorInterpretation_1.BandColorInterpretationFromJSON)(json['colorInterpretation']),
        'bands': !(0, runtime_1.exists)(json, 'bands') ? undefined : (json['bands'].map(ImageBand_1.ImageBandFromJSON)),
        'numLinesPerSecond': !(0, runtime_1.exists)(json, 'numLinesPerSecond') ? undefined : json['numLinesPerSecond'],
        'groundSampleDistanceMeters': !(0, runtime_1.exists)(json, 'groundSampleDistanceMeters') ? undefined : json['groundSampleDistanceMeters'],
        'numDSAs': !(0, runtime_1.exists)(json, 'numDSAs') ? undefined : json['numDSAs'],
        'badDSAs': !(0, runtime_1.exists)(json, 'badDSAs') ? undefined : json['badDSAs'],
    };
}
exports.CollectBandsetMetadataFromJSONTyped = CollectBandsetMetadataFromJSONTyped;
function CollectBandsetMetadataToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bandsetName': value.bandsetName,
        'numLinesInDsa': value.numLinesInDsa,
        'firstUsableLine': value.firstUsableLine,
        'numUsableLines': value.numUsableLines,
        'colorInterpretation': (0, BandColorInterpretation_1.BandColorInterpretationToJSON)(value.colorInterpretation),
        'bands': value.bands === undefined ? undefined : (value.bands.map(ImageBand_1.ImageBandToJSON)),
        'numLinesPerSecond': value.numLinesPerSecond,
        'groundSampleDistanceMeters': value.groundSampleDistanceMeters,
        'numDSAs': value.numDSAs,
        'badDSAs': value.badDSAs,
    };
}
exports.CollectBandsetMetadataToJSON = CollectBandsetMetadataToJSON;
//# sourceMappingURL=CollectBandsetMetadata.js.map