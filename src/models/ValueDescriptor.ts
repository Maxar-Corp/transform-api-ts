/* tslint:disable */
/* eslint-disable */
/**
 * Transform API
 * TODO
 *
 * The version of the OpenAPI document: 1.0
 * Contact: someone@maxar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * A description of a value input or output from a function or operator.
 * @export
 * @interface ValueDescriptor
 */
export interface ValueDescriptor {
    /**
     * The name of the type.
     * @type {string}
     * @memberof ValueDescriptor
     */
    name?: string;
    /**
     * A description of the type.
     * @type {string}
     * @memberof ValueDescriptor
     */
    description?: string;
    /**
     * The JSONSchema for the type
     * @type {{ [key: string]: any; }}
     * @memberof ValueDescriptor
     */
    schema?: { [key: string]: any; };
}

/**
 * Check if a given object implements the ValueDescriptor interface.
 */
export function instanceOfValueDescriptor(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ValueDescriptorFromJSON(json: any): ValueDescriptor {
    return ValueDescriptorFromJSONTyped(json, false);
}

export function ValueDescriptorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValueDescriptor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'schema': !exists(json, 'schema') ? undefined : json['schema'],
    };
}

export function ValueDescriptorToJSON(value?: ValueDescriptor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'schema': value.schema,
    };
}

