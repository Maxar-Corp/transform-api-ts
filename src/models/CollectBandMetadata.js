"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Transform API
 * TODO
 *
 * The version of the OpenAPI document: 1.0
 * Contact: someone@maxar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CollectBandMetadataToJSON = exports.CollectBandMetadataFromJSONTyped = exports.CollectBandMetadataFromJSON = exports.instanceOfCollectBandMetadata = void 0;
const runtime_1 = require("../runtime");
const ImageBand_1 = require("./ImageBand");
/**
 * Check if a given object implements the CollectBandMetadata interface.
 */
function instanceOfCollectBandMetadata(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCollectBandMetadata = instanceOfCollectBandMetadata;
function CollectBandMetadataFromJSON(json) {
    return CollectBandMetadataFromJSONTyped(json, false);
}
exports.CollectBandMetadataFromJSON = CollectBandMetadataFromJSON;
function CollectBandMetadataFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'absoluteCalibrationFactor': !(0, runtime_1.exists)(json, 'absoluteCalibrationFactor') ? undefined : json['absoluteCalibrationFactor'],
        'effectiveBandwidth': !(0, runtime_1.exists)(json, 'effectiveBandwidth') ? undefined : json['effectiveBandwidth'],
        'spectralMidpoint': !(0, runtime_1.exists)(json, 'spectralMidpoint') ? undefined : json['spectralMidpoint'],
        'tdiLevel': !(0, runtime_1.exists)(json, 'tdiLevel') ? undefined : json['tdiLevel'],
        'noDataValue': !(0, runtime_1.exists)(json, 'noDataValue') ? undefined : json['noDataValue'],
        'bandAlias': !(0, runtime_1.exists)(json, 'bandAlias') ? undefined : (0, ImageBand_1.ImageBandFromJSON)(json['bandAlias']),
    };
}
exports.CollectBandMetadataFromJSONTyped = CollectBandMetadataFromJSONTyped;
function CollectBandMetadataToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'absoluteCalibrationFactor': value.absoluteCalibrationFactor,
        'effectiveBandwidth': value.effectiveBandwidth,
        'spectralMidpoint': value.spectralMidpoint,
        'tdiLevel': value.tdiLevel,
        'noDataValue': value.noDataValue,
        'bandAlias': (0, ImageBand_1.ImageBandToJSON)(value.bandAlias),
    };
}
exports.CollectBandMetadataToJSON = CollectBandMetadataToJSON;
//# sourceMappingURL=CollectBandMetadata.js.map